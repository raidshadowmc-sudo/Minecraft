#!/usr/bin/env python3
"""
PostgreSQL database migration and initialization script
"""

from app import app, db
from sqlalchemy import text, inspect
import time

def migrate_postgresql():
    """Migrate PostgreSQL database and initialize data"""
    print("üöÄ Starting PostgreSQL migration and initialization...")

    try:
        with app.app_context():
            # Create all missing tables
            db.create_all()
            print("‚úÖ All tables created/updated")
            
            # Initialize default themes with Minecraft-style names
            init_minecraft_themes()
            
            # Initialize demo data
            init_demo_data()
            
            # Initialize default achievements  
            init_achievements()
            
            # Initialize default quests
            init_quests()
            
            # Initialize default shop items
            init_shop_items()
            
            print("‚úÖ PostgreSQL migration completed successfully!")

    except Exception as e:
        print(f"‚ùå Error during migration: {e}")
        db.session.rollback()
        return False

    return True

def init_minecraft_themes():
    """Initialize Minecraft-themed site themes"""
    try:
        from models import SiteTheme
        
        # Check if themes already exist
        if SiteTheme.query.count() > 0:
            print("üé® Themes already exist, updating...")
            # Update existing themes with Minecraft names
            themes_to_update = [
                ("default_dark", "–≠—Å—Å–µ–Ω—Ü–∏—è –≠–Ω–¥–∞", "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞ —Å —ç–Ω–µ—Ä–≥–∏–µ–π –ö—Ä–∞—è"),
                ("nether_theme", "–ü–ª–∞–º—è –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞", "–û–≥–Ω–µ–Ω–Ω–∞—è —Ç–µ–º–∞ –≤ —Å—Ç–∏–ª–µ –ù–µ–∑–µ—Ä–∞"),
                ("ocean_theme", "–ì–ª—É–±–∏–Ω—ã –û–∫–µ–∞–Ω–∞", "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è –≤–æ–¥–Ω–∞—è —Ç–µ–º–∞"),
                ("forest_theme", "–õ–µ—Å–Ω—ã–µ –Ω–µ–¥—Ä–∞", "–ó–µ–ª—ë–Ω–∞—è –ø—Ä–∏—Ä–æ–¥–Ω–∞—è —Ç–µ–º–∞"),
                ("crystal_theme", "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—â–µ—Ä—ã", "–ë–ª–µ—Å—Ç—è—â–∞—è —Ç–µ–º–∞ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π"),
            ]
            
            for old_name, new_display_name, new_description in themes_to_update:
                theme = SiteTheme.query.filter_by(name=old_name).first()
                if theme:
                    theme.display_name = new_display_name
                    theme.description = new_description
        else:
            # Create new Minecraft-style themes
            themes = [
                SiteTheme(
                    name='ender_essence',
                    display_name='–≠—Å—Å–µ–Ω—Ü–∏—è –≠–Ω–¥–∞',
                    description='–¢—ë–º–Ω–∞—è —Ç–µ–º–∞ —Å —ç–Ω–µ—Ä–≥–∏–µ–π –ö—Ä–∞—è –∏ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
                    primary_color='#8b5cf6',
                    secondary_color='#a855f7',
                    background_color='#0f0f23',
                    card_background='#1e1b4b',
                    text_color='#e2e8f0',
                    accent_color='#8b5cf6',
                    is_default=True
                ),
                SiteTheme(
                    name='nether_flame',
                    display_name='–ü–ª–∞–º—è –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞',
                    description='–û–≥–Ω–µ–Ω–Ω–∞—è —Ç–µ–º–∞ –≤ —Å—Ç–∏–ª–µ –ù–µ–∑–µ—Ä–∞ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
                    primary_color='#dc2626',
                    secondary_color='#ef4444',
                    background_color='#1f1f1f',
                    card_background='#450a0a',
                    text_color='#fef2f2',
                    accent_color='#dc2626'
                ),
                SiteTheme(
                    name='ocean_depths',
                    display_name='–ì–ª—É–±–∏–Ω—ã –û–∫–µ–∞–Ω–∞',
                    description='–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è –≤–æ–¥–Ω–∞—è —Ç–µ–º–∞ —Å —Å–∏–Ω–∏–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
                    primary_color='#0ea5e9',
                    secondary_color='#0284c7',
                    background_color='#0c1426',
                    card_background='#1e3a8a',
                    text_color='#dbeafe',
                    accent_color='#0ea5e9'
                ),
                SiteTheme(
                    name='forest_essence',
                    display_name='–õ–µ—Å–Ω—ã–µ –Ω–µ–¥—Ä–∞',
                    description='–ó–µ–ª—ë–Ω–∞—è –ø—Ä–∏—Ä–æ–¥–Ω–∞—è —Ç–µ–º–∞ —Å –∑–µ–º–Ω—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
                    primary_color='#16a34a',
                    secondary_color='#22c55e',
                    background_color='#0f1f0f',
                    card_background='#14532d',
                    text_color='#dcfce7',
                    accent_color='#16a34a'
                ),
                SiteTheme(
                    name='crystal_caves',
                    display_name='–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—â–µ—Ä—ã',
                    description='–ë–ª–µ—Å—Ç—è—â–∞—è —Ç–µ–º–∞ —Å –æ—Ç—Ç–µ–Ω–∫–∞–º–∏ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π',
                    primary_color='#06b6d4',
                    secondary_color='#0891b2',
                    background_color='#164e63',
                    card_background='#0e7490',
                    text_color='#cffafe',
                    accent_color='#06b6d4'
                )
            ]
            
            for theme in themes:
                db.session.add(theme)
        
        db.session.commit()
        print("‚úÖ Minecraft themes initialized")
        
    except Exception as e:
        print(f"‚ö†Ô∏è Error initializing themes: {e}")

def init_demo_data():
    """Initialize demo players"""
    try:
        from models import Player
        
        # Create demo player if none exist
        if Player.query.count() == 0:
            demo_player = Player(
                nickname='SmoK3_FuRY',
                kills=1250,
                final_kills=890,
                deaths=520,
                final_deaths=150,
                beds_broken=680,
                games_played=420,
                wins=315,
                experience=89000,
                coins=5000,
                reputation=1500,
                karma=750,
                role='–í–ª–∞–¥–µ–ª–µ—Ü',
                custom_role='üëë –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å',
                custom_role_color='#ffd700',
                profile_is_public=True,
                bio='–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å Elite Squad'
            )
            db.session.add(demo_player)
            db.session.commit()
            print("‚úÖ Demo player created")
        else:
            print("‚úÖ Players already exist")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Error creating demo data: {e}")

def init_achievements():
    """Initialize default achievements"""
    try:
        from models import Achievement
        
        if Achievement.query.count() == 0:
            achievements = [
                Achievement(
                    name="first_kill",
                    display_name="–ü–µ—Ä–≤–∞—è –∫—Ä–æ–≤—å",
                    description="–ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ —É–±–∏–π—Å—Ç–≤–æ",
                    icon="fas fa-sword",
                    rarity="common",
                    coins_reward=50,
                    reputation_reward=10
                ),
                Achievement(
                    name="bed_destroyer", 
                    display_name="–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∫—Ä–æ–≤–∞—Ç–µ–π",
                    description="–°–ª–æ–º–∞–π—Ç–µ 100 –∫—Ä–æ–≤–∞—Ç–µ–π",
                    icon="fas fa-bed",
                    rarity="rare",
                    coins_reward=500,
                    reputation_reward=100
                ),
                Achievement(
                    name="legend",
                    display_name="–õ–µ–≥–µ–Ω–¥–∞",
                    description="–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 50 —É—Ä–æ–≤–Ω—è",
                    icon="fas fa-crown",
                    rarity="legendary",
                    coins_reward=2000,
                    reputation_reward=500
                )
            ]
            
            for achievement in achievements:
                db.session.add(achievement)
            
            db.session.commit()
            print("‚úÖ Achievements initialized")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Error initializing achievements: {e}")

def init_quests():
    """Initialize default quests"""
    try:
        from models import Quest
        from datetime import datetime, timedelta
        
        if Quest.query.count() == 0:
            quests = [
                Quest(
                    name="daily_wins",
                    display_name="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–æ–±–µ–¥—ã",
                    description="–í—ã–∏–≥—Ä–∞–π—Ç–µ 5 –∏–≥—Ä",
                    quest_type="daily",
                    target_value=5,
                    coins_reward=100,
                    reputation_reward=25,
                    expires_at=datetime.utcnow() + timedelta(days=1)
                ),
                Quest(
                    name="weekly_beds",
                    display_name="–ù–µ–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å",
                    description="–°–ª–æ–º–∞–π—Ç–µ 50 –∫—Ä–æ–≤–∞—Ç–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é",
                    quest_type="weekly", 
                    target_value=50,
                    coins_reward=500,
                    reputation_reward=100,
                    expires_at=datetime.utcnow() + timedelta(weeks=1)
                )
            ]
            
            for quest in quests:
                db.session.add(quest)
            
            db.session.commit()
            print("‚úÖ Quests initialized")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Error initializing quests: {e}")

def init_shop_items():
    """Initialize default shop items"""
    try:
        from models import ShopItem
        
        if ShopItem.query.count() == 0:
            items = [
                ShopItem(
                    name="custom_role_color",
                    display_name="–¶–≤–µ—Ç–Ω–∞—è —Ä–æ–ª—å",
                    description="–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ü–≤–µ—Ç —Å–≤–æ–µ–π —Ä–æ–ª–∏",
                    price=1000,
                    currency="coins",
                    item_type="cosmetic",
                    rarity="rare"
                ),
                ShopItem(
                    name="profile_theme",
                    display_name="–¢–µ–º–∞ –ø—Ä–æ—Ñ–∏–ª—è",
                    description="–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è",
                    price=2000,
                    currency="coins", 
                    item_type="cosmetic",
                    rarity="epic"
                )
            ]
            
            for item in items:
                db.session.add(item)
            
            db.session.commit()
            print("‚úÖ Shop items initialized")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Error initializing shop items: {e}")

if __name__ == '__main__':
    print("üöÄ Starting PostgreSQL migration...")
    if migrate_postgresql():
        print("‚úÖ Migration completed successfully!")
    else:
        print("‚ùå Migration failed!")